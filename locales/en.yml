en:
  lita:
    handlers:
      locker:
        steal:
          stolen: "%{thief} stole %{label} from %{victim} %{mention}"
          already_unlocked: "%{label} was already unlocked"
          self: "%{user}, why are you stealing the lock from yourself?"
        give:
          not_owner: "The lock on %{label} can only be given by its current owner: %{owner} %{mention}"
          given: "%{giver} gave %{label} to %{recipient} %{mention}"
          self: "%{user}, why are you giving the lock to yourself?"
        observe:
          now_observing: "%{user} is now observing %{name}"
          already_observing: "%{user}, you are already observing %{name}"
          stopped_observing: "%{user}, you have stopped observing %{name}"
          were_not_observing: "%{user}, you were not observing %{name}"
        help:
          log:
            syntax: locker log <label>
            desc: Show up to the last 10 activity log entries for <label>
          dequeue:
            syntax: locker dequeue <label>
            desc: Remove yourself from the queue for a label
          lock:
            syntax: lock <label>
            desc: "Make something unavailable to others. Can have # comments afterwards."
          unlock:
            syntax: unlock <label>
            desc: "Make something available to others. Can have # comments afterwards."
          observe:
            syntax: locker observe <label>
            desc: "Get a notification when something becomes available. Can have # comments afterwards."
          unobserve:
            syntax: locker unobserve <label>
            desc: "Stop getting notifications when something becomes available. Can have # comments afterwards."
          steal:
            syntax: steal <label>
            desc: "Force removal of a reservation. Can have # comments afterwards."
          give:
            syntax: locker give <label> to <username>
            desc: "Transfer ownership of a lock to another user. Can have # comments afterwards."
          status:
            syntax: locker status <label or resource>
            desc: "Show the current state of <label or resource>. Supports wildcard search with *"
          list:
            syntax: locker list <username>
            desc: Show what locks a user currently holds
          resource:
            list:
              syntax: locker resource list
              desc: List all resources
            create:
              syntax: "locker resource create <name>[, <name> ...]"
              desc: Create resource(s) with each <name>
            delete:
              syntax: "locker resource delete <name>[, <name> ...]"
              desc: Delete the resource(s) with each <name>
            show:
              syntax: locker resource show <name>
              desc: Show the state of <name>
          label:
            list:
              syntax: locker label list
              desc: List all labels
            create:
              syntax: "locker label create <name>[, <name> ...]"
              desc: Create label(s) with each <name>
            delete:
              syntax: "locker label delete <name>[, <name> ...]"
              desc: Delete the label(s) with each <name>
            show:
              syntax: locker label show <name>
              desc: Show all resources for <name>
            add:
              syntax: "locker label add <resource>[, <resource> ...] to <name>"
              desc: Adds each <resource> to the list of things to lock/unlock for <name>
            remove:
              syntax: "locker label remove <resource>[, <resource> ...] from <name>"
              desc: Removes each <resource> from <name>
        resource:
          created: "Resource %{name} created"
          desc: "Resource: %{name}, state: %{state}"
          exists: "%{name} already exists"
          deleted: "Resource %{name} deleted"
          does_not_exist: "Resource %{name} does not exist"
          lock: "%{name} locked"
          is_locked: "%{name} is locked"
          unlock: "%{name} unlocked"
          is_unlocked: "%{name} is unlocked"
          owned: "%{name} is locked by %{owner_name}"
          owned_mention: "%{name} is locked by %{owner_name} (@%{owner_mention})"
        status:
          does_not_exist: "%{name} does not exist. Use * for wildcard search"
        subject:
          does_not_exist: "%{name} does not exist"
        label:
          log_entry: "%{entry}"
          self_lock: "%{user}, you already have the lock on %{name}"
          unlock: "%{name} unlocked"
          owned_lock: "%{name} is locked by %{owner_name} %{mention} (taken %{time}), you have been added to the queue (currently: %{queue}), type 'locker dequeue %{name}' to be removed"
          owned_unlock: "%{name} is locked by %{owner_name} %{mention} (taken %{time})"
          is_unlocked: "%{name} is unlocked"
          unlocked_no_queue: "%{name} is unlocked and no one is next up %{mention}"
          unable_to_lock: "%{name} unable to be locked"
          lock: "%{name} locked"
          desc: "%{name} is unlocked"
          desc_owner: "%{name} is locked by %{owner_name} (taken %{time})"
          desc_owner_queue: "%{name} is locked by %{owner_name} (taken %{time}). Next up: %{queue}"
          created: "Label %{name} created"
          exists: "%{name} already exists"
          deleted: "Label %{name} deleted"
          does_not_exist: "Label %{name} does not exist. To create it: \"!locker label create %{name}\""
          has_no_resources: "Label %{name} has no resources"
          resource_added: "Resource %{resource} has been added to %{label}"
          resource_removed: "Resource %{resource} has been removed from %{label}"
          resources: "Label %{name} has: %{resources}"
          does_not_have_resource: "Label %{label} does not have Resource %{resource}"
          no_resources: "%{name} has no resources, so it cannot be locked"
          dependency: 'Label unable to be locked, blocked on:'
          now_locked_by: "%{name} now locked by %{owner} %{mention}"
          removed_from_queue: "%{user} has been removed from the queue for %{name}"
          unknown_in_queue: "%{user}, you weren't in the queue for %{name}"
        user:
          unknown: "Unknown user '%{user}'"
          no_active_locks: "%{user} has no active locks"
